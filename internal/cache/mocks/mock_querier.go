// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=mocks/mock_querier.go
//

// Package mock_cache is a generated GoMock package.
package mock_cache

import (
	context "context"
	reflect "reflect"

	db "github.com/bnema/dumber/internal/db"
	gomock "go.uber.org/mock/gomock"
)

// MockHistoryQuerier is a mock of HistoryQuerier interface.
type MockHistoryQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryQuerierMockRecorder
	isgomock struct{}
}

// MockHistoryQuerierMockRecorder is the mock recorder for MockHistoryQuerier.
type MockHistoryQuerierMockRecorder struct {
	mock *MockHistoryQuerier
}

// NewMockHistoryQuerier creates a new mock instance.
func NewMockHistoryQuerier(ctrl *gomock.Controller) *MockHistoryQuerier {
	mock := &MockHistoryQuerier{ctrl: ctrl}
	mock.recorder = &MockHistoryQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryQuerier) EXPECT() *MockHistoryQuerierMockRecorder {
	return m.recorder
}

// GetHistory mocks base method.
func (m *MockHistoryQuerier) GetHistory(ctx context.Context, limit int64) ([]db.History, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHistory", ctx, limit)
	ret0, _ := ret[0].([]db.History)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHistory indicates an expected call of GetHistory.
func (mr *MockHistoryQuerierMockRecorder) GetHistory(ctx, limit any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHistory", reflect.TypeOf((*MockHistoryQuerier)(nil).GetHistory), ctx, limit)
}

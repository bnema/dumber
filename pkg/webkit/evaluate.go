package webkit

/*
#cgo pkg-config: webkitgtk-6.0
#include <webkit/webkit.h>
*/
import "C"
import (
	"unsafe"

	webkit "github.com/diamondburned/gotk4-webkitgtk/pkg/webkit/v6"
	"github.com/diamondburned/gotk4/pkg/core/gbox"
)

// EvaluateJavascript executes JavaScript code in the WebView
// This is a wrapper around webkit_web_view_evaluate_javascript that wasn't generated by gotk4
func EvaluateJavascript(view *webkit.WebView, script string) {
	if view == nil {
		return
	}

	// Get the native C pointer from the gotk4 WebView using gbox.Get
	// gbox.Get expects a uintptr (the address of the Go object wrapper)
	ptr := gbox.Get(uintptr(unsafe.Pointer(view)))
	if ptr == nil {
		return
	}

	cScript := C.CString(script)
	defer C.free(unsafe.Pointer(cScript))

	// Call webkit_web_view_evaluate_javascript
	// Parameters: web_view, script, length, world_name, source_uri, cancellable, callback, user_data
	C.webkit_web_view_evaluate_javascript(
		(*C.WebKitWebView)(ptr.(unsafe.Pointer)),
		cScript,
		C.gssize(-1), // -1 means null-terminated string
		nil,          // world_name (NULL for default world)
		nil,          // source_uri (NULL)
		nil,          // cancellable (NULL)
		nil,          // callback (NULL for fire-and-forget)
		nil,          // user_data (NULL)
	)
}
